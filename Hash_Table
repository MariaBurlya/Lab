#include <iostream>
#include <vector>
#include <list>
#include <string>

using namespace std;

class HashTable {
    private:
    vector<list<pair<string, string>>> table;
    int size;
    int now_size;

    int hash_func(const string& key) {
        int hash = 0;
        for (char ch : key) {
            hash += ch;
        }
        return hash % size;
    }

    public:
    HashTable(int s) : size(s), now_size(0) {
        table.resize(size);
    }

    void HSET(const string& key, const string& value) {
        if (now_size >= size) {
            cout << "Таблица полна. Добавить ключ-значение невозможно" << endl;
            return;
        }
        int index = hash_func(key);
        for (const auto& pair : table[index]) {
            if (pair.first == key) {
                cout << "Ключ уже существует. Повторите попытку" << endl;
                return;
            }
        }
        table[index].emplace_back(key, value);
        now_size++;
        cout << "Элемент добавлен" << endl;
        }

    void HDEL(const string& key) {
        int index = hash_func(key);
        auto& cell = table[index];
        for (auto it = cell.begin(); it != cell.end(); ++it){
            if (it->first == key) {
                cell.erase(it);
                now_size--;
                cout << "Элемент удален" << endl;
                return;
            }
        }
        cout << "Ключ не найден. Удаление не возможно" << endl;
    }

    void HGET(const string& key) {
        int index = hash_func(key);
        for (const auto& pair : table[index]) {
            if (pair.first == key) {
                cout << "Значение для введенного ключа: " << pair.second << endl;
                return;
            }
        }
        cout << "Ключ не найден" << endl;
    }

    void PRINT() {
        cout << "Содержимое хеш-таблицы: " << endl;
        for (int i = 0; i < size; ++i) {
            cout << "Индекс " << i << ": ";
            for (const auto& pair : table[i]) {
                cout << "{" << pair.first << ":" << pair.second << "}";
            }
            cout << endl;
        }
    }
};

int main() {
    HashTable H(10);
    string command, key, value;

    while (true) {
        cout << "Введите команду HSET, HDEL, HGET, PRINT, EXIT: ";
        cin >> command;

        if (command == "EXIT") {
            break;
        }

        else if (command == "HSET") {
            cout << "Введите ключ: ";
            cin >> key;
            cout << "Введите значение: ";
            cin >> value;
            H.HSET(key, value);
        }

        else if (command == "HDEL") {
            cout << "Введите ключ: ";
            cin >> key;
            H.HDEL(key);
        }

        else if (command == "HGET") {
            cout << "Введите ключ: ";
            cin >> key;
            H.HGET(key);
        }

        else if (command == "PRINT") {
            H.PRINT();
        }

        else {
            cout << "Неизвестная команда" << endl;
        }
    }
    return 0;
}
